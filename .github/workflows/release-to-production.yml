name: release-to-production
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (only number)'
        required: true
        default: '0'
        type: string
env:
  REGISTRY_ID: crpkbormehnpcu7gaie8
jobs:

  check-image-exists:
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Login as service account"
            echo ${{ secrets.YC_AUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex
            echo "Check if image exists"
            docker manifest inspect cr.yandex/${{ env.REGISTRY_ID }}/app:${{ inputs.release_version}}_latest > /dev/null 2>&1
                      exit_code=$?        
                      if [ $exit_code -eq 0 ]; then
                        echo "image exists"
                      else
                        echo "image does not exist"
                        exit 1
                      fi

  launch-image-in-vm:
    runs-on: ubuntu-latest
    needs: check-image-exists
    if: ${{ success() }}
    env:
      VM_PORT: 3000
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Login as service account"
            echo ${{ secrets.YC_AUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex
            echo "Pull latest image"
            docker pull cr.yandex/${{ env.REGISTRY_ID }}/app:${{ inputs.release_version}}_latest
            echo "Run image"
            docker run -p ${{ env.VM_PORT }}:${{ env.VM_PORT }} -d cr.yandex/${{ env.REGISTRY_ID }}/app:${{ inputs.release_version}}_latest
